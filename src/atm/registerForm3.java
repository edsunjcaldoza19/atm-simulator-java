/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package atm;

import java.awt.Dimension;
import java.awt.Toolkit;

/**
 *
 * @author Asus
 */
public class registerForm3 extends javax.swing.JFrame {

    /**
     * Creates new form registerForm3
     */
    public registerForm3() {
        initComponents();
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        chkAgree = new javax.swing.JCheckBox();
        btnProceed = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(36, 47, 65));

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));

        jLabel1.setFont(new java.awt.Font("Century Gothic", 0, 28)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("TERMS AND CONDITIONS");

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/terms.jpg"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Century Gothic", 0, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("PLEASE AGREE TO THE TERMS\nAND CONDITIONS OF THIS \nATM SYSTEM");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jLabel3))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel1)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(50, 50, 50)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jTextArea1.setText("----------------------------------------------------------------------------\nPlease read these Terms and Conditions carefully and make sure that you understand them.\n\n1. DEFINITIONS In these Terms and Conditions, unless the context otherwise requires, the following expressions shall have the following meanings:- “Account“ means any account held by the Customer with branches in Hong Kong of the Bank which the Bank has agreed, following an appropriate application by the Customer, shall be accessible by the use of the Card; “ATM“ means any automatic teller machine in operation in the Network and such other Network as from time to time announced by the Bank; “ATM Services“ means any one or more of the following services from time to time determined by the Bank and accessible by the use of a Card at or through an ATM:- (a) withdrawals of cash from an Account; (b) enquiries as to debit/credit balances on an Account; (c) transfers of available credit balances, or amounts available on agreed overdraft, between Accounts or to other accounts; (d) changes of the PIN relating to a Card; (e) such other services as the Bank may from time to time provide; “Bank“ means Bank SinoPac, which expression shall include its successors and assigns; “Business Day“ means any day on which the Bank is open for business in Hong Kong; “Card“ means any card issued by the Bank at the request and in the name of the Customer for use in connection with ATM Services; “Customer“ means any person who has agreed to these Terms and Conditions with the Bank; “Hong Kong“ means the Hong Kong Special Administrative Region of the People s Republic of China; “Network“ means any network from time to time designated by the Bank to provide ATM Services; “PIN“ means any personal identification number(s) designated by the Bank and/or any personal identification number(s) selected by the Customer which allows the Customer access to ATM Services through the use of the Card; and “Terms and Conditions“ means these ATM Terms and Conditions. 1.2 Unless the context otherwise requires: (a) words importing one gender include the other genders; (b) words importing the singular shall include the plural and vice versa; (c) references to Clauses are references to clauses in these Terms and Conditions; (d) references to documents (including these Terms and Conditions) include the same as from time to time amended, supplemented and substituted; (e) clause and other headings are for ease of reference only and shall not affect the interpretation of these Terms and Conditions; (f) the word “person“ includes any individual, company, firm, partnership, joint venture, association, sole proprietorship or other incorporated or unincorporated entity and its legal representatives, executors, administrators, committee, receiver or other persons lawfully acting on behalf of such person; and (g) “including“ and “includes“ mean respectively “including without limitation“ and “includes without limitation“. 2. ATM SERVICES 2.1 These Terms and Conditions shall govern the use of a Card and the provision of ATM Services. 2.2 In addition to these Terms and Conditions, the Bank s General Terms and Conditions for Accounts shall also apply to the use of Cards and the provision of ATM Services (including those provisions in the General Terms and Conditions for Accounts relating to examining statements of account and the Bank s set off rights). If there is any conflict between these Terms and Conditions and the General Terms and Conditions for Accounts, these Terms and Conditions shall prevail. 2.3 ATM Services shall only become available after the Bank has notified the Customer in writing of the Bank s acceptance of his application (including any PIN selected by the Customer and those Accounts in respect of which he wishes to carry out ATM transactions) for a Card. If the Customer wishes to terminate enrolment in ATM Services, he must do so by written notice to the Bank. Enrolment will terminate automatically if the Card giving access to ATM Services is cancelled. 2.4 The Bank may offer such facilities through ATM Services as it shall from time to time decide and may without prior notice at its discretion (i) revoke the right of the Customer to use ATM Services, (ii) refuse to act on any instruction given to it via an ATM or (iii) refuse to renew a Card. 2.5 The Card can be used at (a) any ATM installed by, belonging to, or designated by, the Bank and (b) any other terminals or devices used for effecting payment or transfer of funds by electronic or other means, including point of sale terminals from time to time nominated by the Bank. 2.6 No withdrawal or transfer of funds using ATM Services is permitted unless there are sufficient funds in the Account, unless the Bank otherwise agrees. If a withdrawal or transfer is made without sufficient funds or available credit in the Account to cover the relevant payment, the Customer shall repay to the Bank immediately on demand the amount overdrawn or transferred in excess of available funds or credit together with interest at the rate chargeable by the Bank from time to time on unarranged overdraft facilities with the Bank. The interest rate from time to time applicable to unauthorized overdraft facilities is specified in a schedule of charges and/or interest published by the Bank from time to time and will be made available to the Customer upon request. 2.7 The Bank shall be entitled from time to time to impose limits, whether in respect of amounts or otherwise, upon withdrawals, transfers or other transactions using Cards. 2.8 Notwithstanding that an instruction may be received by the Bank outside the normal banking hours on a Business Day and be carried out immediately, the relevant transaction effected pursuant to such instruction may be deemed to have taken effect on the next Business Day if the Bank so determines. 3. THE CARD 3.1 The Card is and shall at all times be the property of the Bank. The Customer shall surrender the Card to the Bank immediately upon demand irrespective of whether the Bank has given any prior notice or any reason therefor, or upon the cancellation or termination of the use of the Card for whatever reason. 3.2 The Card shall only be used by the Customer and is not transferable or allowed to lend or pledge to any third party. 4. RESPONSIBILITY FOR PROPER USE OF CARD AND PIN 4.1 The Customer is responsible for the proper use of the Card and the related PIN and shall take reasonable steps to keep the Card and PIN secure and confidential and shall not allow any unauthorized person to have access to the Card or PIN. 4.2 The Customer shall not use or allow the use of the Card for any illegal activity or any arrangement that is contrary or prohibited by law. 4.3 If the Card is lost or stolen or the PIN becomes known to any unauthorised person, the Customer shall immediately notify the Bank in writing or report such loss, theft or unauthorized disclosure to the Bank by calling the Bank s customer services hotline as notified by the Bank to the Customer from time to time. The Customer shall be fully responsible for all transactions involving the use of the Card whether or not authorized by the Customer prior to the Bank s actual receipt of such notice. 4.4 If a Card is lost or stolen, the Bank may, at its absolute discretion, issue a replacement Card at the request of the Customer on such terms and conditions as it deems fit. The Bank is entitled to charge a reasonable fee for replacing a Card or issuing a new PIN. If the Customer subsequently finds a Card previously reported lost, he shall not use such Card and shall return the same to the Bank as soon as reasonably practicable. 4.5 The ATM Card service within or outside Hong Kong are subject to the respectively daily transaction limits and the scope of service as determined by the Bank from time to time. 5. DEBITING THE ACCOUNT The Customer irrevocably authorizes the Bank to debit (without any prior notice to the Customer) from any Account the amount of any withdrawal, transfer and/or other transaction using a Card at any ATM whether or not made with his knowledge or authorization. 6. NO RIGHT TO CREDIT OR OVERDRAFT These Terms and Conditions do not entitle the Customer to any right of credit or overdraft. 7. LIABILITY OF CUSTOMERS 7.1 The Customer shall be liable in respect of all transactions using ATM Services, except (i) those arising from the misuse of the Card before receipt of the Card by the Customer, (ii) those occurring after the Bank has received adequate notice of the loss or theft of the Card or of a PIN becoming known to an unauthorised person, (iii) those effected resulting in direct loss to the Customer when faults have occurred in the relevant ATM, Network or other system used to provide ATM Services unless the fault was obvious or advised by a message or notice on display, and (iv) those effected by counterfeit or forged cards, provided that the Customer has acted in good faith. In the absence of manifest error, fraud, wilful default or gross negligence, the Bank s records of any ATM transaction or the records of the operator of any ATM within the Networks as the Bank from time to time designates shall be binding on the Customer.");
        jScrollPane1.setViewportView(jTextArea1);

        chkAgree.setBackground(new java.awt.Color(36, 47, 65));
        chkAgree.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        chkAgree.setForeground(new java.awt.Color(255, 255, 255));
        chkAgree.setText("I Agree to the Terms and Conditions of Use");
        chkAgree.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chkAgreeMouseClicked(evt);
            }
        });
        chkAgree.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAgreeActionPerformed(evt);
            }
        });

        btnProceed.setBackground(new java.awt.Color(36, 47, 65));
        btnProceed.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        btnProceed.setForeground(new java.awt.Color(255, 255, 255));
        btnProceed.setText("PROCEED");
        btnProceed.setEnabled(false);
        btnProceed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProceedActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(36, 47, 65));
        jButton3.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("CANCEL");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkAgree)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(btnProceed, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 34, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(chkAgree)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnProceed, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 56, Short.MAX_VALUE))
                .addGap(29, 29, 29))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnProceedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProceedActionPerformed
        dispose();
        new registerForm4().setVisible(true);
    }//GEN-LAST:event_btnProceedActionPerformed

    private void chkAgreeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAgreeActionPerformed
        if(chkAgree.isSelected()){
            btnProceed.setEnabled(true);
        }
        else{
            btnProceed.setEnabled(false);
        }
        
    }//GEN-LAST:event_chkAgreeActionPerformed

    private void chkAgreeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chkAgreeMouseClicked
        
    }//GEN-LAST:event_chkAgreeMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        dispose(); 
        new registerForm2().setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(registerForm3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(registerForm3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(registerForm3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(registerForm3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new registerForm3().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnProceed;
    private javax.swing.JCheckBox chkAgree;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
